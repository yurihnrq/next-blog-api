/users:
  post:
    description: Create a new user
    tags: [Users]
    parameters:
      - in: body
        name: CreateUserDTO
        description: The user to create.
        schema:
          $ref: '#/components/schemas/CreateUserDTO'
    responses:
      201:
        description: User created successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: User created successfully.
                data:
                  type: object
                  nullable: true
                  example: null
      400:
        $ref: '#/components/responses/InvalidInput'
      409:
        $ref: '#/components/responses/Conflict'
      500:
        $ref: '#/components/responses/ServerInternalError'

  get:
    description: Get all users
    tags: [Users]
    responses:
      200:
        description: Users fetched successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: Users fetched successfully.
                data:
                  type: object
                  properties:
                    count:
                      type: number
                      example: 1
                    totalPages:
                      type: number
                      example: 1
                    currentPage:
                      type: number
                      example: 1
                    pageSize:
                      type: number
                      example: 10
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
      204:
        description: No users found.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: No users found.
                data:
                  type: object
                  nullable: true
                  example: null

      500:
        $ref: '#/components/responses/ServerInternalError'

/users/{userId}:
  get:
    description: Get data from a specific user
    tags: [Users]
    parameters:
      - in: path
        name: User Id
        description: The user id.
        schema:
          $ref: '#/components/schemas/UserId'
    responses:
      200:
        description: User fetched successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: User fetched successfully.
                data:
                  $ref: '#/components/schemas/User'
      404:
        description: Requested user not found.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User not found.
                data:
                  type: object
                  nullable: true
                  example: null
      500:
        $ref: '#/components/responses/ServerInternalError'

  delete:
    description: Delete a user.
    security:
      - bearerAuth: []
    tags: [Users]
    parameters:
      - in: path
        name: User Id
        description: The user id.
        schema:
          $ref: '#/components/schemas/UserId'
    responses:
      200:
        description: User deleted successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: User deleted successfully.
                data:
                  type: object
                  nullable: true
                  example: null
      404:
        description: Requested user not found.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User not found.
                data:
                  type: object
                  nullable: true
                  example: null
      500:
        $ref: '#/components/responses/ServerInternalError'

  put:
    description: Update a user.
    security:
      - bearerAuth: []
    tags: [Users]
    parameters:
      - in: body
        name: UpdateUserDTO
        description: The user to create.
        schema:
          $ref: '#/components/schemas/UpdateUserDTO'
      - in: path
        name: User Id
        description: The user id.
        schema:
          $ref: '#/components/schemas/UserId'
    responses:
      200:
        description: Users fetched successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: User updated successfully.
                data:
                  type: object
                  nullable: true
                  example: null
      400:
        $ref: '#/components/responses/InvalidInput'
      404:
        description: Requested user not found.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User not found.
                data:
                  type: object
                  nullable: true
                  example: null
      409:
        $ref: '#/components/responses/Conflict'
      500:
        $ref: '#/components/responses/ServerInternalError'
